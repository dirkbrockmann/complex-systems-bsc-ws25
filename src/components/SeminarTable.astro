---
import { seminar } from '../data/seminar.data';

// Optional: allow passing a subset or override rows via a prop later
interface Props {
  rows?: typeof seminar;
  class?: string;
}

const { rows = seminar, class: className = '' } = Astro.props as Props;
---
<div class={`overflow-x-auto ${className}`}>
  <table class="w-full border-collapse text-sm md:text-base">
    <thead>
      <tr class="border-b border-neutral-300 dark:border-neutral-700 text-left">
        <th class="py-2 pr-3">Explorable</th>
        <th class="py-2 pr-3">Topic</th>
        <th class="py-2 pr-3">Student</th>
        <th class="py-2 pr-3">Date</th>
        <th class="py-2 pr-3">Presentation</th>
      </tr>
    </thead>
    <tbody>
      {rows.map((row) => (
        <tr class="border-b border-neutral-200 dark:border-neutral-800">
          <td class="py-2 pr-3">
            {row.link ? (
              <a href={row.link} target="_blank" rel="noreferrer" class="underline hover:no-underline">
                {row.explorable}
              </a>
            ) : row.explorable}
          </td>
          <td class="py-2 pr-3">{row.topic}</td>
          <td class="py-2 pr-3">{row.student}</td>
          <td class="py-2 pr-3">{row.date}</td>
          <td class="py-2 pr-3">
            {row.presentation ? (
              <a href={row.presentation} target="_blank" rel="noreferrer" class="underline hover:no-underline">Slides</a>
            ) : <span class="text-neutral-400">â€”</span>}
          </td>
        </tr>
      ))}
    </tbody>
  </table>
  {rows.length === 0 ? (
    <p class="mt-3 text-neutral-500 dark:text-neutral-400">No seminar entries yet.</p>
  ) : null}
  <p class="sr-only">{rows.length} entries</p>
  
</div>